%h3.page-title New file
%hr
.file-editor
  = form_tag(project_new_tree_path(@project, @id), method: :put, class: "form-horizontal") do
    .form-group.commit_message-group
      = label_tag 'file_name', class: "control-label" do
        File name
      .col-sm-10
        .input-group
          %span.input-group-addon
            = @path[-1] == "/" ? @path : @path + "/"
          = text_field_tag 'file_name', params[:file_name], placeholder: "sample.feature", required: true, class: 'form-control'
          %span.input-group-addon
            on
            %span= @ref

    .form-group.commit_message-group
      = label_tag :encoding, class: "control-label" do
        Encoding
      .col-sm-10
        = select_tag :encoding, options_for_select([ "base64", "text" ], "text"), class: 'form-control'

    .form-group.commit_message-group
      = label_tag 'commit_message', class: "control-label" do
        Commit message
      .col-sm-10
        = text_area_tag 'commit_message', params[:commit_message], placeholder: "Added new file", required: true, rows: 3, class: 'form-control'

    .form-group.ace_mode-group
      = label_tag 'ace_mode', class: "control-label" do
        Editor mode
      .col-sm-10
        = select_tag 'ace_mode', options_for_select([ "gherkin" ], "gherkin"), {:disabled => true, class: 'form-control'}

    .file-holder
      .file-title
        %i.icon-file
      .file-content.code
        %pre#editor= params[:content]

    .form-actions
      = hidden_field_tag 'content', '', id: "file-content"
      .commit-button-annotation
        = button_tag "Commit changes", class: 'btn commit-btn js-commit-button btn-create'
        .message
          to branch
          %strong= @ref
      = link_to "Cancel", project_tree_path(@project, @id), class: "btn btn-cancel", data: { confirm: leave_edit_message}

= javascript_include_tag 'ace/ace'
= javascript_include_tag 'ace/mode-gherkin.js'
= javascript_include_tag 'ace/ext-language_tools.js'

:javascript
  window.disableButtonIfEmptyField = function(field_selector, button_selector) {
    var closest_submit, field;
    field = $(field_selector);
    closest_submit = field.closest("form").find(button_selector);
    if (field.val() === "") {
      closest_submit.disable = true;
    }
    return field.on("input", function() {
      if ($(this).val() === "") {
        return closest_submit.disable = true;
      } else {
        return closest_submit.disable = false;
      }
    });
  };
  
  ace.config.set("modePath", "#{Gitlab::Application.config.assets.prefix}/ace-src-noconflict")
  ace.require("ace/ext/language_tools");
  var editor = ace.edit("editor");
  editor.session.setMode("ace/mode/gherkin");
  editor.setOptions({
      enableBasicAutocompletion: true
  });

  disableButtonIfEmptyField("#commit_message", ".js-commit-button");

  $(".js-commit-button").click(function(){
    $("#file-content").val(editor.getValue());
    $(".file-editor form").submit();
  });
